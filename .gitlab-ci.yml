stages:
  - test
  - generate_report
  - deploy

variables:
  STAGE_ADMIN_LINK: $STAGE_ADMIN_LINK
  STAGE_ADMIN_EMAIL: $STAGE_ADMIN_EMAIL
  STAGE_ADMIN_PASSWORD: $STAGE_ADMIN_PASSWORD

run_tests:
  stage: test
  image: mcr.microsoft.com/playwright/python:v1.47.0-noble
  script:
    - apt-get update
    - apt-get install -y xvfb
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt
    - python -m playwright install --with-deps
    - rm -rf allure-results
    - mkdir -p allure-results/history
    - if [ -d allure-report/history ]; then cp -R allure-report/history allure-results/history; fi
    - xvfb-run -a pytest tests/test_sign_up_flow_dpf.py -k test_sign_up_website_qr_type --alluredir=allure-results
    - mkdir -p reports
  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - allure-results
  when: manual

generate_allure_report:
  stage: generate_report
  image: mcr.microsoft.com/playwright/python:v1.47.0-noble
  needs:
    - run_tests
  script:
    - apt-get update
    - apt-get install -y wget unzip default-jre
    - wget https://github.com/allure-framework/allure2/releases/download/2.21.0/allure-2.21.0.zip -O allure.zip
    - unzip allure.zip -d /opt/allure
    - export PATH=$PATH:/opt/allure/allure-2.21.0/bin
    - allure generate allure-results -o allure-report --clean
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - allure-report
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - allure-report/history

pages:
  stage: deploy
  needs:
    - job: generate_allure_report
  script:
    - mv allure-report/*
  artifacts:
    paths:
      - public

