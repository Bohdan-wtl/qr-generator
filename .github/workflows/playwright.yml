name: Docker UI Tests

on:
  workflow_dispatch:
    inputs:
      browser:
        description: "Select browser"
        required: true
        default: "chromium"
        type: choice
        options:
          - "chromium"
          - "webkit"
          - "firefox"
          - "all"

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      STAGE_ADMIN_LINK: ${{ secrets.STAGE_ADMIN_LINK }}
      STAGE_ADMIN_EMAIL: ${{ secrets.STAGE_ADMIN_EMAIL }}
      STAGE_ADMIN_PASSWORD: ${{ secrets.STAGE_ADMIN_PASSWORD }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Check out gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: ./.github/gh-pages

      - name: Set up Docker cache
        uses: actions/cache@v4
        with:
          path: /tmp/.docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.CI_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/bohdan-wtl/qr-generator/ui-tests:v1
          cache-from: type=gha
          cache-to: type=gha,mode=max
          github-token: ${{ secrets.CI_TOKEN }}


      - name: Run Chrome tests
        if: ${{ github.event.inputs.browser == 'chromium' }}
        run: docker-compose up chrome-tests || true

      - name: Run Webkit tests
        if: ${{ github.event.inputs.browser == 'webkit' }}
        run: docker-compose up webkit-tests || true

      - name: Run Firefox tests
        if: ${{ github.event.inputs.browser == 'firefox' }}
        run: docker-compose up firefox-tests || true

      - name: Copy history from gh-pages to allure-results
        run: |
          sudo mkdir -p allure-results/history
          sudo cp -R ./.github/gh-pages/history/* allure-results/history/

      - name: Generate Allure report
        run: |
          if ${{ github.event.inputs.browser == 'chromium' }}; then
            sudo docker-compose run chrome-tests /bin/sh -c "allure generate allure-results --clean -o allure-report/chromium"
          elif ${{ github.event.inputs.browser == 'webkit' }}; then
            sudo docker-compose run webkit-tests /bin/sh -c "allure generate allure-results --clean -o allure-report/webkit"
          elif ${{ github.event.inputs.browser == 'firefox' }}; then
            sudo docker-compose run firefox-tests /bin/sh -c "allure generate allure-results --clean -o allure-report/firefox"
          fi

      - name: Update Allure history
        run: |
          sudo cp -R allure-report/history/* ./.github/gh-pages/history/

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          token: ${{ secrets.CI_TOKEN }}
          branch: gh-pages
          folder: allure-report
          clean: false

      - name: Send notification to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          REPORT_URL="https://bohdan-wtl.github.io/qr-generator/"
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "Результаты UI тестов",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*Results of UI tests:*"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":white_check_mark: Tests are finished on: *'"${{ github.event.inputs.browser }}"'*. Link to report: <'"${REPORT_URL}"'|Open report>"
                }
              }
            ]
          }' $SLACK_WEBHOOK_URL
