name: Regression Tests

on:
  workflow_dispatch:
    inputs:
      browser:
        description: "Select browser"
        required: true
        default: "chrome"
        type: choice
        options:
          - "chrome"
          - "webkit"
          - "firefox"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    env:
      STAGE_ADMIN_LINK: ${{ secrets.STAGE_ADMIN_LINK }}
      STAGE_ADMIN_EMAIL: ${{ secrets.STAGE_ADMIN_EMAIL }}
      STAGE_ADMIN_PASSWORD: ${{ secrets.STAGE_ADMIN_PASSWORD }}
    strategy:
      matrix:
        test_package: [tests_cff_flow, tests_default_flow, tests_dpf_flow, tests_nsf_flow]

    steps:
      - uses: actions/checkout@v4

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: ./gh-pages
          clean: true

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.CI_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Install Docker Compose
        run: |
          sudo apt-get update -y
          sudo apt-get install -y docker-compose

      - name: Run tests
        env:
          TEST_PACKAGE: ${{ matrix.test_package }}
        run: |
          if [ "${{ github.event.inputs.browser }}" == "chrome" ]; then
            docker-compose run -e TEST_PACKAGE=${{ matrix.test_package }} chrome-tests || true
          elif [ "${{ github.event.inputs.browser }}" == "webkit" ]; then
            docker-compose run -e TEST_PACKAGE=${{ matrix.test_package }} webkit-tests || true
          elif [ "${{ github.event.inputs.browser }}" == "firefox" ]; then
            docker-compose run -e TEST_PACKAGE=${{ matrix.test_package }} firefox-tests || true
          fi

  combine-results:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Copy history from gh-pages to allure-results
        run: |
          sudo mkdir -p allure-results/history
          sudo cp -R ./gh-pages/${{ github.event.inputs.browser }}/history/* allure-results/history/

      - name: Generate Allure report
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Create directory for browser reports
        run: |
          mkdir -p ./gh-pages/${{ github.event.inputs.browser }}
          echo "Created directory: ./gh-pages/${{ github.event.inputs.browser }}"

      - name: Copy Allure report to browser directory
        run: |
          cp -R allure-report/* ./gh-pages/${{ github.event.inputs.browser }}/
          echo "Copied Allure report to ./gh-pages/${{ github.event.inputs.browser }}"

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          token: ${{ secrets.CI_TOKEN }}
          branch: gh-pages
          folder: ./gh-pages/${{ github.event.inputs.browser }}
          target-folder: ./${{ github.event.inputs.browser }}
          clean: true
