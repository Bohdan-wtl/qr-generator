  name: Playwright Tests
  on:
    workflow_dispatch:
      inputs:
        browser:
          description: 'Choose the browser to run tests on (chromium, webkit)'
          required: true
          default: 'chromium'
          type: choice
          options:
            - chromium
            - webkit

  jobs:
    test:
      runs-on: ubuntu-latest

      steps:
        - name: Check out repository
          uses: actions/checkout@v2

        - name: Check out gh-pages branch
          uses: actions/checkout@v2
          with:
            ref: gh-pages
            path: gh-pages

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.12'

        - name: Install dependencies
          run: |
            apt-get update && \
            apt-get install -y wget xvfb default-jre && \
            python -m pip install --upgrade pip && \
            pip install -r requirements.txt && \
            wget https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz && \
            tar -zxvf allure-2.25.0.tgz -C /opt/ && \
            ln -s /opt/allure-2.25.0/bin/allure /usr/local/bin/allure && \
            chmod +x /usr/local/bin/allure

        - name: Install Playwright Browsers
          run: |
            python -m pip install pytest-playwright && \
            playwright install

        - name: Run your tests
          env:
            BROWSER: ${{ github.event.inputs.browser }}
            STAGE_URL: ${STAGE_URL}
            STAGE_ADMIN_LINK: ${STAGE_ADMIN_LINK}
            STAGE_ADMIN_EMAIL: ${STAGE_ADMIN_EMAIL}
            STAGE_ADMIN_PASSWORD: ${STAGE_ADMIN_PASSWORD}
          run: xvfb-run -a pytest tests/test-debug.py -sv -n 10 --alluredir=allure-results --browser_name=${BROWSER}

        - name: Copy previous reports
          run: |
            mkdir -p allure-results
            cp -r gh-pages/allure-results/* allure-results/ || true

        - name: Merge new results with previous results
          run: |
            cp -r allure-results/* gh-pages/allure-results

        - name: Generate Allure Report with history
          run: |
            allure generate gh-pages/allure-results -o gh-pages --clean

        - name: Deploy Allure Report to GitHub Pages
          if: success()
          uses: peaceiris/actions-gh-pages@v3
          with:
            github_token: ${{ secrets.CI_TOKEN }}
            publish_dir: gh-pages
