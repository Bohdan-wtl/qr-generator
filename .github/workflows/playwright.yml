name: Docker UI Tests with Deployment

on:
  workflow_dispatch:
    inputs:
      browser:
        description: "Select browser"
        required: true
        default: "chrome"
        type: choice
        options:
          - "chrome"
          - "webkit"
          - "firefox"

jobs:
  # Job для запуска тестов и генерации отчёта
  tests:
    runs-on: ubuntu-latest
    env:
      STAGE_ADMIN_LINK: ${{ secrets.STAGE_ADMIN_LINK }}
      STAGE_ADMIN_EMAIL: ${{ secrets.STAGE_ADMIN_EMAIL }}
      STAGE_ADMIN_PASSWORD: ${{ secrets.STAGE_ADMIN_PASSWORD }}
    steps:
      # Чекаут основной ветки main
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          path: .

      # Вход в Docker Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.CI_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Установка Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Запуск тестов для указанного браузера
      - name: Run tests
        run: |
          if [ "${{ github.event.inputs.browser }}" == "chrome" ]; then
            docker-compose up chrome-tests || true
          elif [ "${{ github.event.inputs.browser }}" == "webkit" ]; then
            docker-compose up webkit-tests || true
          elif [ "${{ github.event.inputs.browser }}" == "firefox" ]; then
            docker-compose up firefox-tests || true
          fi

      # Генерация Allure отчёта
      - name: Generate Allure report
        run: |
          sudo docker-compose run ${{ github.event.inputs.browser }}-tests /bin/sh -c "allure generate allure-results --clean -o allure-report"

      # Отладка: проверка сгенерированных файлов
      - name: Debug Allure report directory
        run: |
          echo "Contents of Allure report directory:"
          ls -la allure-report

      # Настройка GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      # Архивирование результатов отчёта для передачи в следующий шаг
      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-report-${{ github.event.inputs.browser }}
          path: allure-report

  # Job для деплоя
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: tests
    steps:

      # Загрузка артефакта отчёта
      - name: Download Allure Report Artifact
        uses: actions/download-artifact@v3
        with:
          name: allure-report-${{ github.event.inputs.browser }}
          path: allure-report

      # Создание подпапки для браузера и перенос файлов
      - name: Organize files by browser
        run: |
          mkdir -p _site/${{ github.event.inputs.browser }}
          mv allure-report/* _site/${{ github.event.inputs.browser }}/

      # Отладка: проверка структуры файлов перед деплоем
      - name: Debug organized directory
        run: |
          echo "Contents of _site:"
          ls -la _site
          echo "Contents of browser-specific folder:"
          ls -la _site/${{ github.event.inputs.browser }}

      # Деплой на GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.ACTIONS_ID_TOKEN_REQUEST_URL }}
