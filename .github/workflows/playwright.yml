  name: UI Tests
  on:
    workflow_dispatch:

  jobs:
    test:
      runs-on: ubuntu-latest

      steps:
        - name: Check out repository
          uses: actions/checkout@v4

        - name: Check out gh-pages branch
          uses: actions/checkout@v4
          with:
            ref: gh-pages
            path: gh-pages

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.12'

        - name: Cache system dependencies and Allure
          uses: actions/cache@v4
          with:
            path: |
              /usr/local/bin/allure
              /opt/allure-2.25.0
            key: ${{ runner.os }}-system-dependencies-allure


        - name: Install dependencies
          if: steps.cache-system-dependencies-and-allure.outputs.cache-hit != 'true'
          run: |
            sudo apt-get update && \
            sudo apt-get install -y wget xvfb default-jre && \
            python -m pip install --upgrade pip && \
            pip install -r requirements.txt && \
            wget https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz && \
            tar -zxvf allure-2.25.0.tgz -C /opt/ && \
            sudo rm -f /usr/local/bin/allure && \
            sudo ln -s /opt/allure-2.25.0/bin/allure /usr/local/bin/allure && \
            sudo chmod +x /usr/local/bin/allure

        - name: Cache Playwright browsers and pytest-playwright
          uses: actions/cache@v4
          with:
            path: |
              ~/.cache/ms-playwright
              ~/.cache/pip
            key: ${{ runner.os }}-playwright-browsers

        - name: Install Playwright Browsers
          if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
          run: |
            python -m pip install pytest-playwright && \
            playwright install

        - name: Run your tests
          env:
            STAGE_ADMIN_LINK: ${{secrets.STAGE_ADMIN_LINK}}
            STAGE_ADMIN_EMAIL: ${{secrets.STAGE_ADMIN_EMAIL}}
            STAGE_ADMIN_PASSWORD: ${{secrets.STAGE_ADMIN_PASSWORD}}
          run: xvfb-run -a pytest tests/test-debug.py -sv -n 10 --alluredir=allure-results

        - name: Upload Allure results as artifact
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: allure-results
            path: allure-results

    deploy:
      runs-on: ubuntu-latest
      needs: test

      steps:
        - name: Check out repository
          uses: actions/checkout@v4
          with:
            ref: gh-pages
            path: gh-pages

        - name: Deploy Allure Report to GitHub Pages
          if: always()
          uses: peaceiris/actions-gh-pages@v3
          with:
            github_token: ${{ secrets.CI_TOKEN }}
            publish_dir: gh-pages
            keep_files: true
