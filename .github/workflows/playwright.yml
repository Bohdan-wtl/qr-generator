name: Docker UI Tests with Allure Reports

on:
  workflow_dispatch:
    inputs:
      browser:
        description: "Select browser"
        required: true
        default: "chromium"
        type: choice
        options:
          - "chromium"
          - "webkit"
          - "firefox"

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      STAGE_ADMIN_LINK: ${{ secrets.STAGE_ADMIN_LINK }}
      STAGE_ADMIN_EMAIL: ${{ secrets.STAGE_ADMIN_EMAIL }}
      STAGE_ADMIN_PASSWORD: ${{ secrets.STAGE_ADMIN_PASSWORD }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker cache
        uses: actions/cache@v4
        with:
          path: /tmp/.docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.CI_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Run tests
        run: |
          if [ "${{ github.event.inputs.browser }}" == "chromium" ]; then
            docker-compose up chrome-tests || true
          elif [ "${{ github.event.inputs.browser }}" == "webkit" ]; then
            docker-compose up webkit-tests || true
          elif [ "${{ github.event.inputs.browser }}" == "firefox" ]; then
            docker-compose up firefox-tests || true
          fi

      - name: Copy history for Allure
        run: |
          sudo mkdir -p allure-results/history
          if [ "${{ github.event.inputs.browser }}" == "chromium" ]; then
            sudo cp -R ./.github/chrome_reports/history/* allure-results/history/
          elif [ "${{ github.event.inputs.browser }}" == "webkit" ]; then
            sudo cp -R ./.github/webkit_reports/history/* allure-results/history/
          elif [ "${{ github.event.inputs.browser }}" == "firefox" ]; then
            sudo cp -R ./.github/firefox_reports/history/* allure-results/history/
          fi

      - name: Generate Allure report
        run: |
          sudo docker-compose run ${GITHUB_EVENT_INPUTS_BROWSER}-tests /bin/sh -c "allure generate allure-results --clean -o allure-report/${{ github.event.inputs.browser }}"

      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: allure-report-${{ github.event.inputs.browser }}
          path: allure-report/${{ github.event.inputs.browser }}

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Download Allure Report Artifact
        uses: actions/download-artifact@v3
        with:
          name: allure-report-${{ github.event.inputs.browser }}
          path: allure-report

      - name: Configure GitHub Pages
        run: |
          echo 'Setting GitHub Pages for ${{ github.event.inputs.browser }}_reports'
          git init
          git remote add origin https://github.com/${{ github.repository }}.git
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          token: ${{ secrets.CI_TOKEN }}
          branch: ${{ github.event.inputs.browser }}_reports
          folder: allure-report/${{ github.event.inputs.browser }}
          clean: true

      - name: Send notification to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.inputs.browser }}_reports"
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "Tests results for browser: '"${{ github.event.inputs.browser }}"'",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":white_check_mark: Tests are finished for: *'"${{ github.event.inputs.browser }}"'*. Report link: <'"${REPORT_URL}"'|Open>"
                }
              }
            ]
          }' $SLACK_WEBHOOK_URL
